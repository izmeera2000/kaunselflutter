/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var y=Object.defineProperty;var x=Object.getOwnPropertyDescriptor;var I=Object.getOwnPropertyNames;var E=Object.prototype.hasOwnProperty;var P=(l,r)=>{for(var e in r)y(l,e,{get:r[e],enumerable:!0})},D=(l,r,e,t)=>{if(r&&typeof r=="object"||typeof r=="function")for(let n of I(r))!E.call(l,n)&&n!==e&&y(l,n,{get:()=>r[n],enumerable:!(t=x(r,n))||t.enumerable});return l};var H=l=>D(y({},"__esModule",{value:!0}),l);var $={};P($,{default:()=>C});module.exports=H($);var g=require("obsidian");var N=class{constructor(r,e,t){let{nodesPerRow:n,nodeWidth:a,nodeHeight:i,nodeSpacing:d,selectedHeading:s}=t;this.id=`node-${r}`,this.x=r%n*(a+d),this.y=Math.floor(r/n)*(i+d),this.width=a,this.height=i,this.type="file",this.file=e,this.subpath=s?`#${s}`:void 0}toJSON(){return{id:this.id,x:this.x,y:this.y,width:this.width,height:this.height,type:this.type,file:this.file,subpath:this.subpath}}},v=N;var p=require("obsidian");var u=l=>{let r=l.replace(".canvas","").match(/^(.*?)(?: (\d+))?$/);if(!r)throw new Error("Invalid filename format");return{baseName:r[1],number:r[2]?parseInt(r[2]):null,ext:".canvas"}},f=l=>l.endsWith(".canvas")?l:`${l}.canvas`;function A(l,r){let e=this.app.vault.getFolderByPath(l);if(!e)return[];let t=[],n=a=>{var i;a instanceof p.TFile?a.extension==="canvas"&&a.path.includes(r)&&t.push(a):(i=a.children)==null||i.forEach(d=>n(d))};return n(e),t}function W(l,r){let e=f(r),t=u(e),n=A(l,t.baseName),a=0;n.forEach(d=>{var o;a=(o=u(d.name).number)!=null?o:1});let i=a===0?e:`${t.baseName} ${a+1}${t.ext}`;return`${l}/${i}`}async function T(l,r,e,t,n){if(e.length===0){new p.Notice("The folder is empty!");return}let a=W(r,t),i={nodes:await Promise.all(e.map(async(s,o)=>{try{return(await l.vault.read(s)).split(`
`).filter(F=>F.trim().match(/^#+\s+/)).map(F=>F.replace(/^#+\s*/,"")).includes(n.selectedHeading)||(n.selectedHeading=""),new v(o,s.path,n)}catch(c){return console.log(c),null}})),edges:[]},d=await l.vault.create(a,JSON.stringify(i,null,2));n.openOnCreate&&await l.workspace.openLinkText(a,"",!0),d?new p.Notice(`Canvas created at ${a}`):new p.Notice("Failed to create a Canvas file.")}var m=require("obsidian"),w=class extends m.SuggestModal{constructor(e,t){super(e);this.onSelect=t}getSuggestions(e){let t=[],n=i=>{t.push(i),i.children.forEach(d=>{d instanceof m.TFolder&&n(d)})},a=this.app.vault.getRoot().children.filter(i=>i instanceof m.TFolder);for(let i of a)n(i);return t.filter(i=>i.path.toLowerCase().includes(e.toLowerCase()))}renderSuggestion(e,t){t.createEl("div",{text:e.path})}onChooseSuggestion(e){this.onSelect(e)}};var h={nodesPerRow:4,openOnCreate:!0,canvasFileName:`Canvas-${Date.now()}.canvas`,watchFolder:!0,nodeWidth:250,nodeHeight:100,nodeSpacing:20,maxWidth:1e3,maxHeight:1e3,maxSpacing:100,selectedHeading:""},M="foldercanvas",b="generate-canvas-from-folder",O="Generate Canvas from folder",R=`${M}:${b}`,C=class extends g.Plugin{async onload(){await this.loadSettings(),this.addRibbonIcon("palette","Folder Canvas",e=>this.triggerCommandById()),this.addSettingTab(new S(this.app,this)),this.addCommand({id:b,name:O,callback:async()=>{new w(this.app,async e=>{try{await this.generateCanvas(e)}catch(t){new g.Notice("Failed to generate a Canvas file. Please try again."),console.error(t)}}).open()}}),this.registerEvent(this.app.workspace.on("editor-menu",(e,t,n)=>{e.addItem(a=>{a.setTitle("Generate a Canvas view").setIcon("palette").onClick(async()=>this.triggerCommandById())})})),this.registerEvent(this.app.workspace.on("file-menu",(e,t)=>{e.addItem(n=>{n.setTitle("Generate a Canvas view").setIcon("palette").onClick(async()=>this.triggerCommandById())})})),this.app.workspace.onLayoutReady(()=>{this.registerEvent(this.app.vault.on("create",async e=>{e instanceof g.TFile&&e.extension==="md"&&setTimeout(()=>this.updateCanvas("add",e),100)})),this.registerEvent(this.app.vault.on("delete",async e=>{e instanceof g.TFile&&e.extension==="md"&&this.updateCanvas("remove",e)})),this.registerEvent(this.app.vault.on("rename",async(e,t)=>{e instanceof g.TFile&&e.extension==="md"&&setTimeout(()=>this.updateCanvas("rename",e,t),100)}))})}async loadSettings(){this.settings=Object.assign({},h,await this.loadData())}async saveSettings(){await this.saveData(this.settings)}async generateCanvas(e){let t=this.settings.canvasFileName,n=e.children.filter(a=>a instanceof g.TFile&&a.extension==="md");await T(this.app,e.path,n,t,this.settings)}async getCurrentCanvasFile(e){let t=e.path.split("/")[0],n=this.app.vault.getFolderByPath(t);if(!n)return;let a=[],i=d=>{var s;if(d instanceof g.TFile){let o=f(this.settings.canvasFileName),c=u(o);d.extension==="canvas"&&d.path.includes(c.baseName)&&a.push(d)}else(s=d.children)==null||s.forEach(o=>i(o))};return i(n),a==null?void 0:a.pop()}async updateCanvas(e,t,n){if(!this.settings.watchFolder)return;let a=await this.getCurrentCanvasFile(t);if(!a)return;let i=JSON.parse(await this.app.vault.read(a));if(e==="add"){if(a.parent){let d=a.parent.children.filter(o=>o.extension==="md").length,s=new v(d,t.path,this.settings);i.nodes.push(s.toJSON())}}else e==="remove"?i.nodes=i.nodes.filter(d=>!d.file.endsWith(t.path)):e==="rename"&&n&&i.nodes.forEach(d=>{d.file===n&&(d.file=t.path)});await this.app.vault.modify(a,JSON.stringify(i,null,2)),new g.Notice("Canvas updated.")}async triggerCommandById(){this.app.commands.executeCommandById(R)}async getHeadings(){let e=this.app.workspace.getActiveFile();return e?new Promise(t=>{this.app.vault.read(e).then(n=>{let a=n.split(`
`).filter(i=>i.trim().match(/^#+\s+/)).map(i=>i.replace(/^#+\s*/,""));t(a)})}):[]}},S=class extends g.PluginSettingTab{constructor(e,t){super(e,t);this.plugin=t}async display(){let{containerEl:e}=this;e.empty(),new g.Setting(e).setName("Canvas filename pattern").setDesc("Specify the default filename for a new canvas. (Cannot contain '/' or '\\')").addText(s=>s.setPlaceholder("Canvas-<Date>.canvas").setValue(this.plugin.settings.canvasFileName).onChange(async o=>{/[\\/]/.test(o)?(new g.Notice("Invalid characters: '/' and '\\' are not allowed."),s.setValue(this.plugin.settings.canvasFileName)):(this.plugin.settings.canvasFileName=o||h.canvasFileName,await this.plugin.saveSettings())})),new g.Setting(e).setName("Open Canvas on creation").setDesc("Automatically open the new Canvas file after it is created.").addToggle(s=>s.setValue(this.plugin.settings.openOnCreate).onChange(async o=>{this.plugin.settings.openOnCreate=o,await this.plugin.saveSettings()})),new g.Setting(e).setName("Watch Canvas folder").setDesc("Automatically update the Canvas when files are added or removed from the folder.").addToggle(s=>s.setValue(this.plugin.settings.watchFolder).onChange(async o=>{this.plugin.settings.watchFolder=o,await this.plugin.saveSettings()}));let t=new g.Setting(e).setName(`Nodes per row: ${this.plugin.settings.nodesPerRow}`).setDesc("Number of nodes to display per row in the Canvas.").addSlider(s=>s.setLimits(1,10,1).setValue(this.plugin.settings.nodesPerRow).onChange(async o=>{this.plugin.settings.nodesPerRow=o,await this.plugin.saveSettings(),t.setName(`Nodes per row: ${o}`)})),n;new g.Setting(e).setName("Node width").setDesc("Set the width of nodes (default: 250, max: 1000).").addText(s=>{s.setValue(this.plugin.settings.nodeWidth.toString()).onChange(async o=>{let c=this.validateInput(o,this.plugin.settings.maxWidth);this.plugin.settings.nodeWidth=c,await this.plugin.saveSettings()}),n=s.inputEl}).addButton(s=>{s.setButtonText("Reset").setTooltip("Reset to default").onClick(async()=>{this.plugin.settings.nodeWidth=h.nodeWidth,await this.plugin.saveSettings(),n.value=h.nodeWidth.toString()})});let a;new g.Setting(e).setName("Node height").setDesc("Set the height of nodes (default: 100, max: 1000).").addText(s=>{s.setValue(this.plugin.settings.nodeHeight.toString()).onChange(async o=>{let c=this.validateInput(o,this.plugin.settings.maxWidth);this.plugin.settings.nodeHeight=c,await this.plugin.saveSettings()}),a=s.inputEl}).addButton(s=>{s.setButtonText("Reset").setTooltip("Reset to default").onClick(async()=>{this.plugin.settings.nodeHeight=h.nodeHeight,await this.plugin.saveSettings(),a.value=h.nodeHeight.toString()})});let i;new g.Setting(e).setName("Node spacing").setDesc("Set the spacing between nodes (default: 20, max: 100).").addText(s=>{s.setValue(this.plugin.settings.nodeSpacing.toString()).onChange(async o=>{let c=this.validateInput(o,this.plugin.settings.maxWidth);this.plugin.settings.nodeSpacing=c,await this.plugin.saveSettings()}),i=s.inputEl}).addButton(s=>{s.setButtonText("Reset").setTooltip("Reset to default").onClick(async()=>{this.plugin.settings.nodeSpacing=h.nodeSpacing,await this.plugin.saveSettings(),i.value=h.nodeSpacing.toString()})});let d=await this.plugin.getHeadings();new g.Setting(e).setName("Narrow to heading").setDesc("Choose a heading from the active file to apply to all nodes in a Canvas file.").addDropdown(s=>{s.addOption("","Select a heading"),d.forEach(o=>s.addOption(o,o)),s.setValue(this.plugin.settings.selectedHeading),s.onChange(async o=>{this.plugin.settings.selectedHeading=o,await this.plugin.saveSettings()})})}validateInput(e,t){let n=parseInt(e,10);return isNaN(n)&&(n=0),Math.min(n,t)}};

/* nosourcemap */